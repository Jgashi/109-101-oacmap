$colors: (
  TealBlue: #2B8099,
  SeaSerpent: #59C0C5, 
  SeaFoamGreen: #A8E0CA, 
  Alabaster: #EEF1EA, 
  Lotion: #FCFCFC, 
  BrightGray: #E9E9E9,
  fill: cadetblue,
);

@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 10deg)};
  }
};

a {  
  // color: var(--color);
  transition: .5s;
  &:hover,
  &:focus { 
    border-color: var(--hover);
    // color: #E9E9E9;
    button{
      background-color: $gray-100;
      color: var(--color);
    }
  }
}

.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 8rem var(--hover);
}


$enable-responsive-font-sizes: true;
$font-size-base: 1rem;
$h2-font-size: 2rem;


@mixin rwd($breakpoint) {
  @if $breakpoint=="xl" {
    @media all and (min-width: 1201px) {
      @content;
    }
  }
  @if $breakpoint=="lg" {
		@media all and (min-width: 992px) and (max-width: 1200px) {
			@content;
		}
  }
  @else if $breakpoint=="md" {
		@media all and (min-width: 768px) and (max-width: 991px) {
			@content;
		}
  }
  @else if $breakpoint=="sm" {
		@media all and (min-width: 576px) and (max-width: 767px) {
			@content;
		}
  }
  @else if $breakpoint=="ssm" {
		@media all and (min-width: 375px) and (max-width: 575px) {
			@content;
		}
  }
  @else if $breakpoint=="" {
    @media all and (max-width: 374px) {
			@content;
		}
  }
}

$grid-gutter-width: 2rem;

// number of cards per line for each breakpoint
$cards-per-line: (
    xs: 1,
    sm: 2,
    md: 3,
    lg: 4,
    xl: 5,
);

@each $name, $breakpoint in $grid-breakpoints {
	@media (min-width: $breakpoint) {
		.card-deck .card {
			flex: 0 0 calc(#{100/map-get($cards-per-line, $name)}% - #{$grid-gutter-width});
		}
	}
}

.card-deck {
  .card {
    @include rwd(' '){
      flex: 0 0 calc(100% - 2rem);
    }
    @include rwd('ssm'){
      flex: 0 0 calc(50% - 2rem);
    }
    &:hover {
      border-color: #0a58ca;
    }
  }
}

.card-body {
  @include rwd(' '){
    padding: 0;
  }
  @include rwd('ssm'){
    padding: 0;
  }
  @include rwd('sm'){
    padding: 0;
  }
}


html, body {
  height: 100%;
  margin: 0;
}
body {
  display: flex; /*使物件依序排列*/
  flex-direction: column; /*使物件垂直排列*/
}

.wrapper {
  flex-grow: 1; /*可佔滿垂直剩餘的空間*/
}

.wrapper-middle {
  display: flex;
  align-items: center;
  justify-content: center;
}


.text-center {
  a:nth-child(2n) {
    @include rwd(''){
      background-color: mintcream;
    }
    @include rwd(ssm){
      background-color: mintcream;
    }
    @include rwd(sm){
      background-color: unset;
    }
    @include rwd(md){
      background-color: unset;
    }
    @include rwd(lg){
      background-color: mintcream;
    }
    @include rwd(xl){
      background-color: unset;
    }
  }
  
  a:nth-child(2), a:nth-child(3), a:nth-child(6), a:nth-child(7){
    @include rwd(sm){
      background-color: mintcream;
    }
    @include rwd(md){
      background-color: mintcream;
    }
  }
  
  a:nth-child(2), a:nth-child(4), a:nth-child(5), a:nth-child(7){
    @include rwd(xl){
      background-color: mintcream;
    }
  }
}

.opacity {
  background-color: #f8f9faad;
}
.more {
  display: none;
  @include rwd(md){
    display: inline;
  }
  @include rwd(lg){
    display: inline;
  }
  @include rwd(xl){
    display: inline;
  }
}

#container {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -9999;
}

p {  
  transition: 0.25s;
  margin: 0;
  padding: 0;
}

.btn {
  display: inline-block;
  font-weight: 400;
  line-height: 1.5;
  color: var(--color);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  border-radius: 0.25rem;
  transition: color 0.25s ease-in-out, background-color 0.25s ease-in-out, box-shadow 0.25s ease-in-out;
  &:hover{
    background-color: var(--hover); 
    color: white;
  }
}


.btn2 {
  display: inline-block;
  font-weight: 400;
  line-height: 1.5;
  color: $gray-100;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: var(--color);
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1.5rem;
  border-radius: 0.25rem;
  transition: color 0.25s ease-in-out, background-color 0.25s ease-in-out, border-color 0.25s ease-in-out, box-shadow 0.25s ease-in-out;
  &:hover{
    background-color: $gray-100;
    color: var(--color);
  }
}

h1, h2, h3, h4, h5, h6, p {
  color: var(--color);
  font-weight: bold;
  cursor: context-menu;
}

.marquee {
  width: 100%;
  margin: 0 auto;
  overflow: hidden;
  box-sizing: border-box;
  span {
    display: inline-block;
    width: max-content;
    background-color: mintcream;
    font-weight: 700;
    padding-left: 100%;
    /* show the marquee just outside the paragraph */
    will-change: transform;
    animation: marquee 30s linear infinite;
    @include rwd(' ') {
    animation: marquee2 20s linear infinite;
    }
    @include rwd('ssm') {
      animation: marquee2 20s linear infinite;
    }
    @include rwd('sm') {
      animation: marquee2 20s linear infinite;
    }
    @include rwd('md') {
      animation: marquee3 23s linear infinite;
    }
    &:hover {
      animation-play-state: paused
    }
  }
}


@keyframes marquee {
  0% { transform: translate(100%, 0); }
  100% { transform: translate(-105%, 0); }
}

@keyframes marquee2 {
  0% { transform: translate(50%, 0); }
  100% { transform: translate(-110%, 0); }
}

@keyframes marquee3 {
  0% { transform: translate(80%, 0); }
  100% { transform: translate(-110%, 0); }
}

/* Respect user preferences about animations */

@media (prefers-reduced-motion: reduce) {
  .marquee span {
    animation-iteration-count: 1;
    animation-duration: 0.01; 
    /* instead of animation: none, so an animationend event is 
     * still available, if previously attached.
     */
    width: auto;
    padding-left: 0;
  }
}

.nav-wrapper {
  min-width: 184px;
  position: relative;
  background-size: 4rem auto;
  background-repeat: no-repeat;
}

.nav-bg {
  @include rwd('') {
    display: none;
  }
  @include rwd(ssm) {
    display: none;
  }
  @include rwd(sm) {
    display: none;
  }
  @include rwd(md) {
    display: none;
  }
  @include rwd(lg) {
    display: flex;
  }
  @include rwd(xl) {
    display: flex;
  }
}

.bg-img {
  background-image: url(../img/watercolor-background.jpg);
  background-repeat: no-repeat;
  background-size: cover;
}

.Isometric {
  max-width: 100%;
  width: 230px;
  height: 230px;
}

.border-4 {
  border: 4px solid #2B8099;
}

.navbar-brand {
  img {
    width: 100%;
    @include rwd(sm) {
      width: 350px;
    }
    @include rwd(md) {
      width: 350px;
    }
    @include rwd(lg) {
      width: 350px;
    }
    @include rwd(xl) {
      width: 350px;
    }
  }
}

.btn-group{
  @include rwd('') {
    display: block;
  }
  @include rwd(md) {
    display: block;
  }
  @include rwd(lg) {
    display: none;
  }
  @include rwd(xl) {
    display: none;
  }
}

.section-item-icon {
  width: 7rem;
  height: 7rem;
}

.item4-icon {
  width: 6rem;
  height: 6rem;
  margin: 1rem auto;
}



.bi-alarm {
  font-size: 2rem;
}

a {
  text-decoration: none;
}

.card-text {
  a{
    display: inline-block;
  }
}

.w-unset {
  width: unset;
}

.text-white {
  color: #fff;
}

.hover-blur {
  a {
    display: block;
    position: relative;
    overflow: hidden;
    h2 {
      display: block;
      position: absolute;
      top: 0;
      left: 50%;
      transform: translateX(-50%) scale(.8);
      margin-top: 0px;
      margin-bottom: 0px;
      width: 230px;
      height: 230px;
      border-radius: 100%;
      text-align: center;
      background-color: rgba(0,0,0,0.5);
      /*background dotted*/
      transition: all 0.5s linear;
      filter: alpha(opacity=0);
      opacity: 0;
      @include rwd('') {
        opacity: 1;
      }
      @include rwd('ssm') {
        opacity: 1;
      }
      @include rwd('sm') {
        opacity: 1;
      }
      .text-white{
        transform: scale(0);
        transition: all 0.5s linear;
        line-height: 230px;
        opacity: 0;
        @include rwd('') {
          opacity: 1;
        }
        @include rwd('ssm') {
          opacity: 1;
        }
        @include rwd('sm') {
          opacity: 1;
        }
      }
    }
  }
  img {
    transform: scale(.8);
    transition: all 0.5s ease-in-out;
  }
  &:hover{
    img {
      transform: scale(1);
      filter: grayscale(0.6);
    }
    a {
      h2 {
        filter: alpha(opacity=100);
        opacity: 1;
        .text-white {
          transform: scale(1);
          transition: all 0.5s linear;
          opacity: 1;
        }
      }
    }
  }
}


.search {
  max-width: 100%;
  width: 44px;
  transform: scale(1);
  transition: all 0.3s ease-in-out;
  &:hover {
    transform: scale(1.2);
  }
}



// $my-primary:       #2B8099;
// $my-secondary:     #59C0C5;
// $my-third:         #A8E0CA;
// $my-fore:         #EEF1EA;
// $my-five:         #FCFCFC;
// $my-six:         #E9E9E9;


// $theme-colors: (
//   "primary": $my-primary,
//   "secondary": $my-secondary,
//   "third": $my-third,
//   "fore": $my-fore,
//   "five": $my-five,
//   "six": $my-six,
//   "success": $green-300,
//   "warning": $yellow-300,
//   "light-gray": $gray-300,
//   "dark-gray": $gray-700,
// );

// $utilities: (
//   "opacity": (
//     property: opacity,
//     responsive: true,
//     values: (
//       0: 0,
//       10: .1,
//       20: .2,
//       25: .25,
//       50: .5,
//       60: .6,
//       75: .75,
//       80: .8,
//       100: 1,
//     )
//   )
// );

// $utilities: (
//   "opacity": (
//     property: opacity,
//     responsive: true,
//     stat: hover,
//     values: (
//       0: 0,
//       10: .1,
//       20: .2,
//       25: .25,
//       50: .5,
//       60: .6,
//       75: .75,
//       80: .8,
//       100: 1,
//     )
//   )
// );
